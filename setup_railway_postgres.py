#!/usr/bin/env python3
"""
Script para configurar PostgreSQL en Railway
"""

import os
import sys

def setup_railway_postgres():
    """Configurar PostgreSQL en Railway"""
    
    print("üöÄ CONFIGURANDO POSTGRESQL EN RAILWAY")
    print("=" * 50)
    
    print("\nüìã PASOS PARA CONFIGURAR POSTGRESQL EN RAILWAY:")
    print("\n1Ô∏è‚É£ Crear base de datos PostgreSQL:")
    print("   ‚Ä¢ Ve a tu proyecto en Railway")
    print("   ‚Ä¢ Haz clic en 'New Service'")
    print("   ‚Ä¢ Selecciona 'Database'")
    print("   ‚Ä¢ Elige 'PostgreSQL'")
    print("   ‚Ä¢ Dale un nombre (ej: 'clickup-postgres')")
    print("   ‚Ä¢ Espera a que se cree")
    
    print("\n2Ô∏è‚É£ Configurar variables de entorno:")
    print("   ‚Ä¢ En tu servicio principal, ve a 'Variables'")
    print("   ‚Ä¢ Railway autom√°ticamente agrega DATABASE_URL")
    print("   ‚Ä¢ Verifica que CLICKUP_API_TOKEN est√© configurado")
    
    print("\n3Ô∏è‚É£ Ejecutar migraci√≥n:")
    print("   ‚Ä¢ Una vez creada la BD, ejecuta:")
    print("   ‚Ä¢ python migrate_to_postgres.py")
    
    print("\n4Ô∏è‚É£ Verificar conexi√≥n:")
    print("   ‚Ä¢ Visita: /api/v1/tasks/debug-db")
    print("   ‚Ä¢ Deber√≠a mostrar 'PostgreSQL' como tipo de BD")
    
    print("\n" + "=" * 50)
    print("üí° CONSEJOS:")
    print("   ‚Ä¢ Railway autom√°ticamente conecta tu servicio con la BD")
    print("   ‚Ä¢ La variable DATABASE_URL se configura autom√°ticamente")
    print("   ‚Ä¢ No necesitas configurar host, puerto, usuario, etc.")
    print("   ‚Ä¢ La migraci√≥n es autom√°tica y preserva todos los datos")
    
    return True

if __name__ == "__main__":
    setup_railway_postgres()
