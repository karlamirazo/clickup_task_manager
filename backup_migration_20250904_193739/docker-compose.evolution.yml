version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: evolution-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - evolution-network

  evolution-api:
    image: evoapicloud/evolution-api:latest
    container_name: evolution-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - redis
    environment:
      # Configuración de base de datos
      DATABASE_PROVIDER: postgresql
      DATABASE_CONNECTION_URI: postgresql://postgres:admin123@host.docker.internal:5432/clickup_project_manager?schema=evolution_api
      
      # Configuración de Redis (deshabilitado temporalmente)
      REDIS_ENABLED: "false"
      # REDIS_URI: "redis://evolution-redis:6379"
      
      # Configuración del servidor
      SERVER_TYPE: http
      SERVER_PORT: 8080
      SERVER_URL: http://localhost:8080
      
      # CORS
      CORS_ORIGIN: "*"
      CORS_METHODS: "GET,POST,PUT,DELETE"
      CORS_CREDENTIALS: "true"
      
      # API Key
      AUTHENTICATION_API_KEY: clickup_whatsapp_key_2024
      
      # Webhooks habilitados
      WEBHOOK_EVENTS_QRCODE_UPDATED: "true"
      WEBHOOK_EVENTS_MESSAGES_UPSERT: "true"
      WEBHOOK_EVENTS_CONNECTION_UPDATE: "true"
      
      # Logs
      LOG_LEVEL: "ERROR,WARN,DEBUG,INFO,LOG,VERBOSE"
      LOG_COLOR: "true"
      
      # Configuración de WhatsApp
      WEBHOOK_BY_EVENTS: "true"
      WEBHOOK_GLOBAL_URL: "http://localhost:8000/webhook/evolution"
      
      # Configuración de base de datos
      DATABASE_SAVE_DATA_INSTANCE: "true"
      DATABASE_SAVE_DATA_NEW_MESSAGE: "true"
      DATABASE_SAVE_MESSAGE_UPDATE: "true"
      DATABASE_SAVE_DATA_CONTACTS: "true"
      DATABASE_SAVE_DATA_CHATS: "true"
      DATABASE_SAVE_DATA_LABELS: "true"
      DATABASE_SAVE_DATA_HISTORIC: "true"
      DATABASE_SAVE_IS_ON_WHATSAPP: "true"
      DATABASE_SAVE_IS_ON_WHATSAPP_DAYS: "7"
      DATABASE_DELETE_MESSAGE: "true"
      
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
      
    networks:
      - evolution-network

volumes:
  evolution_instances:
  evolution_store:

networks:
  evolution-network:
    driver: bridge
