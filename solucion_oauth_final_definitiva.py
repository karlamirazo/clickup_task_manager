#!/usr/bin/env python3
"""
SOLUCI√ìN DEFINITIVA OAUTH - SOLO DOMINIO RA√çZ
ClickUp rechaza cualquier path despu√©s del dominio
"""

import os
import re
from datetime import datetime

def print_header():
    """Imprimir cabecera del script"""
    print("=" * 90)
    print("üéØ SOLUCI√ìN OAUTH DEFINITIVA - SOLO DOMINIO RA√çZ")
    print("=" * 90)
    print(f"üìÖ Fecha: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

def explain_problem():
    """Explicar el problema encontrado"""
    print("üîç PROBLEMA IDENTIFICADO...")
    print("-" * 70)
    print("‚ùå ClickUp rechaza CUALQUIER path despu√©s del dominio:")
    print("   ‚Ä¢ ctm-pro.up.railway.app/oauth ‚ùå")
    print("   ‚Ä¢ ctm-pro.up.railway.app/callback ‚ùå") 
    print("   ‚Ä¢ ctm-pro.up.railway.app/auth ‚ùå")
    print("   ‚Ä¢ ctm-pro.up.railway.app/cualquier-cosa ‚ùå")
    print()
    print("‚úÖ ClickUp SOLO acepta:")
    print("   ‚Ä¢ ctm-pro.up.railway.app ‚úÖ")
    print()
    print("üîß CAUSA: Limitaci√≥n de la interfaz web de ClickUp")
    print("   ‚Ä¢ Su API puede manejar paths, pero la UI los rechaza")
    print("   ‚Ä¢ Validaci√≥n estricta en el frontend")
    print("   ‚Ä¢ No es problema de SSL ni certificados")

def explain_solution():
    """Explicar la soluci√≥n implementada"""
    print("\nüéØ SOLUCI√ìN IMPLEMENTADA...")
    print("-" * 70)
    print("‚úÖ USAR ENDPOINT RA√çZ (/) COMO CALLBACK OAUTH")
    print()
    print("üîß FUNCIONAMIENTO:")
    print("   1. ClickUp redirige a: https://ctm-pro.up.railway.app?code=xxx&state=yyy")
    print("   2. Endpoint ra√≠z (/) detecta par√°metros OAuth")
    print("   3. Si hay 'code' ‚Üí Procesa OAuth y redirige al dashboard")
    print("   4. Si no hay par√°metros ‚Üí Muestra p√°gina de login normal")
    print()
    print("‚úÖ VENTAJAS:")
    print("   ‚Ä¢ ClickUp puede guardar el dominio sin problemas")
    print("   ‚Ä¢ Funciona como p√°gina principal Y callback OAuth")
    print("   ‚Ä¢ L√≥gica inteligente que detecta el contexto")
    print("   ‚Ä¢ Logging detallado para debugging")
    print("   ‚Ä¢ Manejo completo de errores")

def update_env_files():
    """Actualizar archivos .env con dominio ra√≠z"""
    print("\nüìù ACTUALIZANDO ARCHIVOS .ENV...")
    print("-" * 70)
    
    # URL solo dominio ra√≠z
    root_url = "https://ctm-pro.up.railway.app"
    
    env_files = ['.env', 'env.production', 'env.oauth.simple']
    
    for env_file in env_files:
        if os.path.exists(env_file):
            print(f"üìÑ Actualizando {env_file}...")
            
            try:
                # Leer contenido actual
                with open(env_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # Reemplazar cualquier URL con paths por dominio ra√≠z
                patterns = [
                    r'CLICKUP_OAUTH_REDIRECT_URI=https://ctm-pro\.up\.railway\.app/[^\s\n]+',
                    r'CLICKUP_OAUTH_REDIRECT_URI=https://ctm-pro\.up\.railway\.app',
                    r'CLICKUP_OAUTH_REDIRECT_URI=ctm-pro\.up\.railway\.app'
                ]
                
                updated = False
                for pattern in patterns:
                    if re.search(pattern, content):
                        content = re.sub(pattern, f'CLICKUP_OAUTH_REDIRECT_URI={root_url}', content)
                        updated = True
                
                if updated:
                    # Escribir archivo actualizado
                    with open(env_file, 'w', encoding='utf-8') as f:
                        f.write(content)
                    print(f"   ‚úÖ {env_file} actualizado con dominio ra√≠z")
                else:
                    print(f"   ‚ÑπÔ∏è {env_file} no necesita actualizaci√≥n")
            
            except UnicodeDecodeError:
                print(f"   ‚ö†Ô∏è Error de encoding en {env_file} - omitiendo")
        else:
            print(f"   ‚ö†Ô∏è {env_file} no existe")

def print_final_configuration():
    """Imprimir configuraci√≥n final"""
    print("\nüìã CONFIGURACI√ìN FINAL...")
    print("-" * 70)
    print("üèóÔ∏è EN RAILWAY (Variables):")
    print("   CLICKUP_OAUTH_REDIRECT_URI = https://ctm-pro.up.railway.app")
    print("   (SIN ning√∫n path despu√©s)")
    print()
    print("üåê EN CLICKUP (Redirect URI):")
    print("   ctm-pro.up.railway.app")
    print("   (SIN https:// y SIN paths)")
    print()
    print("üîÑ FLUJO OAUTH COMPLETO:")
    print("   1. Usuario: 'Iniciar con ClickUp'")
    print("   2. ClickUp: Redirige a ctm-pro.up.railway.app?code=xxx")
    print("   3. Endpoint /: Detecta par√°metros OAuth")
    print("   4. Aplicaci√≥n: Procesa y redirige al dashboard")
    print("   5. Usuario: ¬°Ve el dashboard! üéâ")

def print_testing_steps():
    """Imprimir pasos de prueba"""
    print("\nüß™ PASOS DE PRUEBA...")
    print("-" * 70)
    print("1. ‚úÖ VERIFICAR DEPLOY (esperar 2-3 minutos)")
    print("2. üîß ACTUALIZAR RAILWAY:")
    print("   Variable: CLICKUP_OAUTH_REDIRECT_URI = https://ctm-pro.up.railway.app")
    print("3. üåê VERIFICAR CLICKUP:")
    print("   Redirect URI: ctm-pro.up.railway.app (ya deber√≠a estar guardado)")
    print("4. üöÄ PROBAR OAUTH:")
    print("   ‚Ä¢ Ir a: https://ctm-pro.up.railway.app")
    print("   ‚Ä¢ Clic: 'Iniciar con ClickUp'")
    print("   ‚Ä¢ Autorizar en ClickUp")
    print("   ‚Ä¢ ¬°Deber√≠a redirigir al dashboard!")
    print()
    print("üîç SI SIGUE FALLANDO:")
    print("   ‚Ä¢ Verificar logs en Railway")
    print("   ‚Ä¢ Comprobar que la variable est√© bien configurada")
    print("   ‚Ä¢ Asegurar que ClickUp tenga solo el dominio")

def main():
    """Funci√≥n principal"""
    print_header()
    
    # Explicar problema y soluci√≥n
    explain_problem()
    explain_solution()
    
    # Actualizar archivos
    update_env_files()
    
    # Configuraci√≥n final
    print_final_configuration()
    print_testing_steps()
    
    print("\n" + "=" * 90)
    print("‚úÖ SOLUCI√ìN OAUTH DEFINITIVA COMPLETADA")
    print("=" * 90)
    print("üéØ El endpoint ra√≠z (/) es la √∫nica soluci√≥n que funciona con ClickUp")
    print("üì± ClickUp solo acepta dominios sin paths - ahora lo sabemos")
    print("üöÄ Esta configuraci√≥n deber√≠a funcionar al 100%")

if __name__ == "__main__":
    main()
