#!/usr/bin/env python3
"""
Script final de verificaci√≥n OAuth
"""

import os
import sys
import asyncio
import aiohttp

def print_banner():
    """Mostrar banner del script"""
    print("=" * 60)
    print("üéØ VERIFICACI√ìN FINAL OAUTH")
    print("=" * 60)
    print()

def test_oauth_configuration():
    """Probar configuraci√≥n OAuth"""
    print("üîê Verificando configuraci√≥n OAuth...")
    
    try:
        from core.config import settings
        from auth.oauth import clickup_oauth
        
        print(f"   ‚úÖ Client ID: {settings.CLICKUP_OAUTH_CLIENT_ID}")
        print(f"   ‚úÖ Client Secret: {settings.CLICKUP_OAUTH_CLIENT_SECRET[:10]}...")
        print(f"   ‚úÖ Redirect URI: {settings.CLICKUP_OAUTH_REDIRECT_URI}")
        
        # Generar URL de autorizaci√≥n
        auth_url = clickup_oauth.get_authorization_url()
        print(f"   ‚úÖ URL de autorizaci√≥n: {auth_url[:80]}...")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
        return False

def test_database():
    """Probar base de datos"""
    print("\nüóÑÔ∏è  Verificando base de datos...")
    
    try:
        from core.database import engine
        from sqlalchemy import text
        
        with engine.connect() as conn:
            result = conn.execute(text("SELECT 1"))
            print("   ‚úÖ Conexi√≥n a la base de datos exitosa")
            return True
            
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
        return False

async def test_application():
    """Probar aplicaci√≥n"""
    print("\nüåê Verificando aplicaci√≥n...")
    
    try:
        async with aiohttp.ClientSession() as session:
            # Probar endpoint principal
            async with session.get("http://localhost:8000/") as response:
                if response.status == 200:
                    print("   ‚úÖ Aplicaci√≥n ejecut√°ndose")
                    return True
                else:
                    print(f"   ‚ùå Error: {response.status}")
                    return False
                    
    except aiohttp.ClientConnectorError:
        print("   ‚ùå Aplicaci√≥n no ejecut√°ndose")
        return False
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
        return False

def show_instructions():
    """Mostrar instrucciones finales"""
    print("\n" + "=" * 60)
    print("üéâ ¬°OAUTH CONFIGURADO EXITOSAMENTE!")
    print("=" * 60)
    print()
    print("üìã INSTRUCCIONES PARA USAR:")
    print("-" * 40)
    print("1. Inicia la aplicaci√≥n:")
    print("   python -m uvicorn app.main:app --reload")
    print()
    print("2. Abre tu navegador y ve a:")
    print("   http://localhost:8000/api/auth/login")
    print()
    print("3. Haz clic en 'Iniciar con ClickUp'")
    print("4. Completa la autorizaci√≥n en ClickUp")
    print("5. ¬°Ser√°s redirigido al dashboard!")
    print()
    print("üîß ARCHIVOS IMPORTANTES:")
    print("-" * 40)
    print("   ‚Ä¢ .env - Configuraci√≥n de la aplicaci√≥n")
    print("   ‚Ä¢ static/auth.html - P√°gina de autenticaci√≥n")
    print("   ‚Ä¢ auth/oauth.py - L√≥gica OAuth")
    print("   ‚Ä¢ api/routes/auth.py - Rutas de autenticaci√≥n")
    print()
    print("üß™ SCRIPTS DE PRUEBA:")
    print("-" * 40)
    print("   ‚Ä¢ python diagnose_oauth.py - Diagn√≥stico completo")
    print("   ‚Ä¢ python test_real_oauth.py - Prueba OAuth")
    print("   ‚Ä¢ python setup_oauth.py - Configuraci√≥n")
    print()

def main():
    """Funci√≥n principal"""
    print_banner()
    
    # Verificar configuraci√≥n OAuth
    oauth_ok = test_oauth_configuration()
    
    # Verificar base de datos
    db_ok = test_database()
    
    # Verificar aplicaci√≥n
    app_ok = asyncio.run(test_application())
    
    print("\n" + "=" * 60)
    print("üìä RESUMEN:")
    print("=" * 60)
    print(f"   Configuraci√≥n OAuth: {'‚úÖ' if oauth_ok else '‚ùå'}")
    print(f"   Base de datos: {'‚úÖ' if db_ok else '‚ùå'}")
    print(f"   Aplicaci√≥n: {'‚úÖ' if app_ok else '‚ùå'}")
    
    if oauth_ok and db_ok:
        print("\nüéâ ¬°OAuth est√° completamente configurado!")
        show_instructions()
    else:
        print("\n‚ùå Hay problemas que resolver")
        if not oauth_ok:
            print("   - Ejecuta: python diagnose_oauth.py")
        if not db_ok:
            print("   - Verifica la conexi√≥n a PostgreSQL")

if __name__ == "__main__":
    main()

